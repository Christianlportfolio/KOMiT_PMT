// <auto-generated />
using System;
using KOMiT.DataAccess.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KOMiT.DataAccess.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231116085825_domainmodel")]
    partial class domainmodel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CurrentSubGoalProjectMember", b =>
                {
                    b.Property<int>("CurrentSubGoalsId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectMembersId")
                        .HasColumnType("int");

                    b.HasKey("CurrentSubGoalsId", "ProjectMembersId");

                    b.HasIndex("ProjectMembersId");

                    b.ToTable("CurrentSubGoalProjectMember");

                    b.HasData(
                        new
                        {
                            CurrentSubGoalsId = 1,
                            ProjectMembersId = 1
                        });
                });

            modelBuilder.Entity("CurrentTaskProjectMember", b =>
                {
                    b.Property<int>("CurrentTasksId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectMembersId")
                        .HasColumnType("int");

                    b.HasKey("CurrentTasksId", "ProjectMembersId");

                    b.HasIndex("ProjectMembersId");

                    b.ToTable("CurrentTaskProjectMember");

                    b.HasData(
                        new
                        {
                            CurrentTasksId = 1,
                            ProjectMembersId = 1
                        });
                });

            modelBuilder.Entity("EmployeeProjectMember", b =>
                {
                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectMembersId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesId", "ProjectMembersId");

                    b.HasIndex("ProjectMembersId");

                    b.ToTable("EmployeeProjectMember");

                    b.HasData(
                        new
                        {
                            EmployeesId = 1,
                            ProjectMembersId = 1
                        });
                });

            modelBuilder.Entity("KOMiT.Core.Model.Competence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Competence");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Jeg føler mig stærk i...",
                            EmployeeId = 2,
                            Experience = "5 år",
                            Title = "SQL"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Jeg føler mig stærk i...",
                            EmployeeId = 2,
                            Experience = "4 år",
                            Title = "C#"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Jeg føler mig stærk i...",
                            EmployeeId = 1,
                            Experience = "6 år",
                            Title = "Blazor"
                        });
                });

            modelBuilder.Entity("KOMiT.Core.Model.CurrentPhase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstimatedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstimatedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RealizedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StandardPhaseId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StandardPhaseId");

                    b.ToTable("SubProjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EstimatedEndDate = new DateTime(2023, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedStartDate = new DateTime(2023, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 1,
                            StandardPhaseId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            EstimatedEndDate = new DateTime(2024, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedStartDate = new DateTime(2024, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 2,
                            StandardPhaseId = 2,
                            Status = 1
                        });
                });

            modelBuilder.Entity("KOMiT.Core.Model.CurrentSubGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstimatedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RealizedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SubProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubProjectId");

                    b.ToTable("CurrentSubGoals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Dette delmål...",
                            EstimatedEndDate = new DateTime(2024, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "E2E",
                            Status = 0,
                            SubProjectId = 1
                        });
                });

            modelBuilder.Entity("KOMiT.Core.Model.CurrentTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentSubGoalId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstimatedNumberOfDays")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RealizedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentSubGoalId");

                    b.ToTable("CurrentTasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrentSubGoalId = 1,
                            Description = "Denne opgave...",
                            EstimatedNumberOfDays = new DateTime(2023, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Title = "Implementere textfixture for E2E"
                        });
                });

            modelBuilder.Entity("KOMiT.Core.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobPosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "pia@komit.dk",
                            JobPosition = "Udvikler",
                            Name = "Pia Olsen"
                        },
                        new
                        {
                            Id = 2,
                            Email = "per@komit.dk",
                            JobPosition = "Konsulent",
                            Name = "Per Hansen"
                        });
                });

            modelBuilder.Entity("KOMiT.Core.Model.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstimatedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstimatedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("ProjectType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RealizedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Dette projekt...",
                            EstimatedEndDate = new DateTime(2024, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedStartDate = new DateTime(2023, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Skema og tid",
                            Priority = 0,
                            ProjectType = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Dette projekt...",
                            EstimatedEndDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstimatedStartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ElevDataPro",
                            Priority = 0,
                            ProjectType = 0,
                            Status = 0
                        });
                });

            modelBuilder.Entity("KOMiT.Core.Model.ProjectMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProjectMemberStatus")
                        .HasColumnType("int");

                    b.Property<string>("ProjectRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectMembers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProjectMemberStatus = 0,
                            ProjectRole = "Udvikler"
                        });
                });

            modelBuilder.Entity("KOMiT.Core.Model.StandardPhase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StandardPhase");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Denne fase...",
                            Name = "Testning"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Denne fase...",
                            Name = "Opstartsfase"
                        });
                });

            modelBuilder.Entity("KOMiT.Core.Model.StandardSubGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhaseId");

                    b.ToTable("StandardSubGoals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Dette delmål...",
                            Name = "E2E test",
                            PhaseId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Dette delmål...",
                            Name = "Unit Testing",
                            PhaseId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Dette delmål...",
                            Name = "Integration",
                            PhaseId = 1
                        });
                });

            modelBuilder.Entity("KOMiT.Core.Model.StandardTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StandardSubGoalId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StandardSubGoalId");

                    b.ToTable("StandardTasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Denne opgave...",
                            StandardSubGoalId = 1,
                            Title = "Implementer test fixture for E2E"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Denne opgave...",
                            StandardSubGoalId = 2,
                            Title = "Unit Testing"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Denne opgave...",
                            StandardSubGoalId = 3,
                            Title = "Implementere test fixture for integration"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Denne opgave...",
                            StandardSubGoalId = 3,
                            Title = "Test database"
                        });
                });

            modelBuilder.Entity("CurrentSubGoalProjectMember", b =>
                {
                    b.HasOne("KOMiT.Core.Model.CurrentSubGoal", null)
                        .WithMany()
                        .HasForeignKey("CurrentSubGoalsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KOMiT.Core.Model.ProjectMember", null)
                        .WithMany()
                        .HasForeignKey("ProjectMembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CurrentTaskProjectMember", b =>
                {
                    b.HasOne("KOMiT.Core.Model.CurrentTask", null)
                        .WithMany()
                        .HasForeignKey("CurrentTasksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KOMiT.Core.Model.ProjectMember", null)
                        .WithMany()
                        .HasForeignKey("ProjectMembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeProjectMember", b =>
                {
                    b.HasOne("KOMiT.Core.Model.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KOMiT.Core.Model.ProjectMember", null)
                        .WithMany()
                        .HasForeignKey("ProjectMembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KOMiT.Core.Model.Competence", b =>
                {
                    b.HasOne("KOMiT.Core.Model.Employee", "Employee")
                        .WithMany("Competences")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("KOMiT.Core.Model.CurrentPhase", b =>
                {
                    b.HasOne("KOMiT.Core.Model.Project", "Project")
                        .WithMany("CurrentPhases")
                        .HasForeignKey("ProjectId");

                    b.HasOne("KOMiT.Core.Model.StandardPhase", "StandardPhase")
                        .WithMany("SubProjects")
                        .HasForeignKey("StandardPhaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("StandardPhase");
                });

            modelBuilder.Entity("KOMiT.Core.Model.CurrentSubGoal", b =>
                {
                    b.HasOne("KOMiT.Core.Model.CurrentPhase", "SubProject")
                        .WithMany("CurrentSubGoals")
                        .HasForeignKey("SubProjectId");

                    b.Navigation("SubProject");
                });

            modelBuilder.Entity("KOMiT.Core.Model.CurrentTask", b =>
                {
                    b.HasOne("KOMiT.Core.Model.CurrentSubGoal", "CurrentSubGoal")
                        .WithMany("CurrentTasks")
                        .HasForeignKey("CurrentSubGoalId");

                    b.Navigation("CurrentSubGoal");
                });

            modelBuilder.Entity("KOMiT.Core.Model.StandardSubGoal", b =>
                {
                    b.HasOne("KOMiT.Core.Model.StandardPhase", "Phase")
                        .WithMany("StandardSubGoals")
                        .HasForeignKey("PhaseId");

                    b.Navigation("Phase");
                });

            modelBuilder.Entity("KOMiT.Core.Model.StandardTask", b =>
                {
                    b.HasOne("KOMiT.Core.Model.StandardSubGoal", "StandardSubGoal")
                        .WithMany("StandardTasks")
                        .HasForeignKey("StandardSubGoalId");

                    b.Navigation("StandardSubGoal");
                });

            modelBuilder.Entity("KOMiT.Core.Model.CurrentPhase", b =>
                {
                    b.Navigation("CurrentSubGoals");
                });

            modelBuilder.Entity("KOMiT.Core.Model.CurrentSubGoal", b =>
                {
                    b.Navigation("CurrentTasks");
                });

            modelBuilder.Entity("KOMiT.Core.Model.Employee", b =>
                {
                    b.Navigation("Competences");
                });

            modelBuilder.Entity("KOMiT.Core.Model.Project", b =>
                {
                    b.Navigation("CurrentPhases");
                });

            modelBuilder.Entity("KOMiT.Core.Model.StandardPhase", b =>
                {
                    b.Navigation("StandardSubGoals");

                    b.Navigation("SubProjects");
                });

            modelBuilder.Entity("KOMiT.Core.Model.StandardSubGoal", b =>
                {
                    b.Navigation("StandardTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
