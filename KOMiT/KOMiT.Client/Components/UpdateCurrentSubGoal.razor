@using KOMiT.Core.Model
@inject HttpClient http
@inject NavigationManager navigationManager


<EditForm class="container" Model="CurrentSubGoal" OnValidSubmit="@Update">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Navn på delmål</label>
        <InputText @bind-Value="CurrentSubGoal.Name" class="form-control" />
    </div>
    <div class="form-group">
        <label>Beskrivelse</label>
        <InputTextArea @bind-Value="CurrentSubGoal.Description" class="form-control" />
    </div>
    <div class="form-group">
        <label>slutdato</label>
        <InputDate style="max-width:150px;" @bind-Value="CurrentSubGoal.EstimatedEndDate" class="form-control" />
    </div>
    <div style="margin-top:10px;">
        <Button Color="ButtonColor.Secondary" @onclick="OnClick">Luk</Button>
        <Button Color="ButtonColor.Primary" @onclick="Update"> Opdatere</Button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int ID { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }

    [Parameter]
    public CurrentSubGoal? CurrentSubGoal { get; set; }

    protected override async Task OnInitializedAsync()
    {
        CurrentSubGoal.CurrentPhaseId = ID;
    }

    private async Task Update()
    {
        try
        {
            var response = await http.PutAsJsonAsync("https://localhost:7282/api/CurrentSubGoal/UpdateCurrentSubGoal", CurrentSubGoal);
            if (response.IsSuccessStatusCode)
                {
                    navigationManager.NavigateTo($"/phasedetails/{ID}", true);
                }
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"HTTP request error: {ex.Message}");
            throw;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
            throw;
        }
    }
}